services:

  mongo:
    image: mongo:7.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    volumes:
      - ./mongo_data:/data/db
    networks:
      - backend-net

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    networks:
      - backend-net

  backend:
    build: .
    container_name: backend
    ports:
      - 3009:3009
    environment:
      - NODE_ENV=docker
      - PORT=3009
      - MONGO_URI=mongodb://root:example@mongo:27017/
      - COMMENT_EXPIRATION_MONTHS=6
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - REDIS_URL=redis://:1qaz!QAZ@redis:6379
      - REDIS_PASSWORD=1qaz!QAZ
      - REDIS_TTL=60
    volumes:
      - .:/usr/src/app
    working_dir: /usr/src/app
    depends_on:
      - mongo
      - redis
    networks:
      - backend-net
      - redis-net

  redis:
    image: redis:latest
    container_name: redis
    command: ["redis-server", "--requirepass", "1qaz!QAZ"]
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    networks:
      - redis-net

  redisinsight:
    image: redislabs/redisinsight:latest
    ports:
      - 5540:5540
    volumes:
      - redis_insight:/db
    networks:
      - redis-net

volumes:
  redis-data:
  redis_insight:

networks:
  backend-net:
  redis-net: